// Code generated by protoc-gen-go. DO NOT EDIT.
// source: test.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ParamA struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Age                  int32    `protobuf:"varint,2,opt,name=age,proto3" json:"age,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ParamA) Reset()         { *m = ParamA{} }
func (m *ParamA) String() string { return proto.CompactTextString(m) }
func (*ParamA) ProtoMessage()    {}
func (*ParamA) Descriptor() ([]byte, []int) {
	return fileDescriptor_c161fcfdc0c3ff1e, []int{0}
}

func (m *ParamA) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ParamA.Unmarshal(m, b)
}
func (m *ParamA) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ParamA.Marshal(b, m, deterministic)
}
func (m *ParamA) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ParamA.Merge(m, src)
}
func (m *ParamA) XXX_Size() int {
	return xxx_messageInfo_ParamA.Size(m)
}
func (m *ParamA) XXX_DiscardUnknown() {
	xxx_messageInfo_ParamA.DiscardUnknown(m)
}

var xxx_messageInfo_ParamA proto.InternalMessageInfo

func (m *ParamA) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ParamA) GetAge() int32 {
	if m != nil {
		return m.Age
	}
	return 0
}

type ResponseA struct {
	TraceId              string   `protobuf:"bytes,1,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	ParentSpanId         string   `protobuf:"bytes,2,opt,name=parent_span_id,json=parentSpanId,proto3" json:"parent_span_id,omitempty"`
	Name                 string   `protobuf:"bytes,11,opt,name=name,proto3" json:"name,omitempty"`
	Age                  int32    `protobuf:"varint,12,opt,name=age,proto3" json:"age,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResponseA) Reset()         { *m = ResponseA{} }
func (m *ResponseA) String() string { return proto.CompactTextString(m) }
func (*ResponseA) ProtoMessage()    {}
func (*ResponseA) Descriptor() ([]byte, []int) {
	return fileDescriptor_c161fcfdc0c3ff1e, []int{1}
}

func (m *ResponseA) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseA.Unmarshal(m, b)
}
func (m *ResponseA) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseA.Marshal(b, m, deterministic)
}
func (m *ResponseA) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseA.Merge(m, src)
}
func (m *ResponseA) XXX_Size() int {
	return xxx_messageInfo_ResponseA.Size(m)
}
func (m *ResponseA) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseA.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseA proto.InternalMessageInfo

func (m *ResponseA) GetTraceId() string {
	if m != nil {
		return m.TraceId
	}
	return ""
}

func (m *ResponseA) GetParentSpanId() string {
	if m != nil {
		return m.ParentSpanId
	}
	return ""
}

func (m *ResponseA) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ResponseA) GetAge() int32 {
	if m != nil {
		return m.Age
	}
	return 0
}

type ParamB struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Address              string   `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ParamB) Reset()         { *m = ParamB{} }
func (m *ParamB) String() string { return proto.CompactTextString(m) }
func (*ParamB) ProtoMessage()    {}
func (*ParamB) Descriptor() ([]byte, []int) {
	return fileDescriptor_c161fcfdc0c3ff1e, []int{2}
}

func (m *ParamB) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ParamB.Unmarshal(m, b)
}
func (m *ParamB) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ParamB.Marshal(b, m, deterministic)
}
func (m *ParamB) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ParamB.Merge(m, src)
}
func (m *ParamB) XXX_Size() int {
	return xxx_messageInfo_ParamB.Size(m)
}
func (m *ParamB) XXX_DiscardUnknown() {
	xxx_messageInfo_ParamB.DiscardUnknown(m)
}

var xxx_messageInfo_ParamB proto.InternalMessageInfo

func (m *ParamB) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ParamB) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type ResponseB struct {
	TraceId              string   `protobuf:"bytes,1,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	ParentSpanId         string   `protobuf:"bytes,2,opt,name=parent_span_id,json=parentSpanId,proto3" json:"parent_span_id,omitempty"`
	Name                 string   `protobuf:"bytes,11,opt,name=name,proto3" json:"name,omitempty"`
	Address              string   `protobuf:"bytes,12,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResponseB) Reset()         { *m = ResponseB{} }
func (m *ResponseB) String() string { return proto.CompactTextString(m) }
func (*ResponseB) ProtoMessage()    {}
func (*ResponseB) Descriptor() ([]byte, []int) {
	return fileDescriptor_c161fcfdc0c3ff1e, []int{3}
}

func (m *ResponseB) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseB.Unmarshal(m, b)
}
func (m *ResponseB) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseB.Marshal(b, m, deterministic)
}
func (m *ResponseB) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseB.Merge(m, src)
}
func (m *ResponseB) XXX_Size() int {
	return xxx_messageInfo_ResponseB.Size(m)
}
func (m *ResponseB) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseB.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseB proto.InternalMessageInfo

func (m *ResponseB) GetTraceId() string {
	if m != nil {
		return m.TraceId
	}
	return ""
}

func (m *ResponseB) GetParentSpanId() string {
	if m != nil {
		return m.ParentSpanId
	}
	return ""
}

func (m *ResponseB) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ResponseB) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func init() {
	proto.RegisterType((*ParamA)(nil), "pb.ParamA")
	proto.RegisterType((*ResponseA)(nil), "pb.ResponseA")
	proto.RegisterType((*ParamB)(nil), "pb.ParamB")
	proto.RegisterType((*ResponseB)(nil), "pb.ResponseB")
}

func init() { proto.RegisterFile("test.proto", fileDescriptor_c161fcfdc0c3ff1e) }

var fileDescriptor_c161fcfdc0c3ff1e = []byte{
	// 326 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x91, 0xcb, 0x4a, 0x03, 0x31,
	0x14, 0x86, 0x3b, 0x63, 0xed, 0xe5, 0xb4, 0x15, 0x89, 0x20, 0x75, 0x74, 0x51, 0x06, 0x91, 0xe2,
	0x22, 0x83, 0x0a, 0x2e, 0xdc, 0x75, 0xc0, 0x45, 0x51, 0x41, 0x5a, 0xf7, 0x25, 0xd3, 0x39, 0xd6,
	0x40, 0x9b, 0x84, 0x24, 0x0e, 0xe8, 0xd2, 0x57, 0xf0, 0x2d, 0x7c, 0x1d, 0x5f, 0xc1, 0x07, 0x91,
	0xb9, 0xb4, 0xd3, 0xa2, 0x2e, 0xdd, 0x9d, 0x9c, 0xf3, 0x85, 0xef, 0x87, 0x1f, 0xc0, 0xa2, 0xb1,
	0x54, 0x69, 0x69, 0x25, 0x71, 0x55, 0xe4, 0x1d, 0xce, 0xa4, 0x9c, 0xcd, 0x31, 0xc8, 0x36, 0xd1,
	0xf3, 0x63, 0x80, 0x0b, 0x65, 0x5f, 0x72, 0xc0, 0x3b, 0x2a, 0x8e, 0x4c, 0xf1, 0x80, 0x09, 0x21,
	0x2d, 0xb3, 0x5c, 0x0a, 0x93, 0x5f, 0x7d, 0x0a, 0xb5, 0x7b, 0xa6, 0xd9, 0x62, 0x40, 0x08, 0x54,
	0x05, 0x5b, 0x60, 0xd7, 0xe9, 0x39, 0xfd, 0xe6, 0x28, 0x9b, 0xc9, 0x2e, 0x6c, 0xb1, 0x19, 0x76,
	0xdd, 0x9e, 0xd3, 0xdf, 0x1e, 0xa5, 0xa3, 0xaf, 0xa1, 0x39, 0x42, 0xa3, 0xa4, 0x30, 0x38, 0x20,
	0x07, 0xd0, 0xb0, 0x9a, 0x4d, 0x71, 0xc2, 0xe3, 0xe2, 0x5b, 0x3d, 0x7b, 0x0f, 0x63, 0x72, 0x0c,
	0x3b, 0x8a, 0x69, 0x14, 0x76, 0x62, 0x14, 0x13, 0x29, 0xe0, 0x66, 0x40, 0x3b, 0xdf, 0x8e, 0x15,
	0x13, 0xc3, 0x78, 0xe5, 0x6c, 0xfd, 0x74, 0xb6, 0x4b, 0xe7, 0x65, 0x91, 0x31, 0xfc, 0x35, 0x63,
	0x17, 0xea, 0x2c, 0x8e, 0x35, 0x1a, 0x53, 0x28, 0x96, 0x4f, 0xff, 0xb5, 0xcc, 0x1a, 0xfe, 0x4f,
	0xd6, 0x35, 0x77, 0x7b, 0xc3, 0x7d, 0xfe, 0xe1, 0x40, 0xeb, 0x01, 0x8d, 0x1d, 0xa3, 0x4e, 0xf8,
	0x14, 0xc9, 0x0d, 0x54, 0x6f, 0x79, 0x82, 0x64, 0x9f, 0xe6, 0x75, 0xd0, 0x65, 0x57, 0xf4, 0x3a,
	0xed, 0xca, 0xfb, 0x63, 0xef, 0xef, 0xbd, 0x7d, 0x7e, 0xbd, 0xbb, 0x1d, 0xd2, 0x08, 0x92, 0xb3,
	0x60, 0xce, 0x13, 0xbc, 0x72, 0x4e, 0xc9, 0x09, 0xd4, 0xef, 0xd0, 0x3e, 0xc9, 0x78, 0x40, 0x80,
	0xaa, 0x88, 0xe6, 0x0d, 0x7a, 0x9d, 0x74, 0x5e, 0xb5, 0xe3, 0x57, 0x4a, 0x2e, 0x5c, 0xe3, 0xc2,
	0x4d, 0x2e, 0xf4, 0x2b, 0x51, 0x2d, 0x93, 0x5e, 0x7c, 0x07, 0x00, 0x00, 0xff, 0xff, 0x2d, 0x7d,
	0x6f, 0x1d, 0x58, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TestServiceClient is the client API for TestService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TestServiceClient interface {
	Live(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error)
	MethodA(ctx context.Context, in *ParamA, opts ...grpc.CallOption) (*ResponseA, error)
	MethodB(ctx context.Context, in *ParamB, opts ...grpc.CallOption) (*ResponseB, error)
}

type testServiceClient struct {
	cc *grpc.ClientConn
}

func NewTestServiceClient(cc *grpc.ClientConn) TestServiceClient {
	return &testServiceClient{cc}
}

func (c *testServiceClient) Live(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/pb.TestService/Live", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *testServiceClient) MethodA(ctx context.Context, in *ParamA, opts ...grpc.CallOption) (*ResponseA, error) {
	out := new(ResponseA)
	err := c.cc.Invoke(ctx, "/pb.TestService/MethodA", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *testServiceClient) MethodB(ctx context.Context, in *ParamB, opts ...grpc.CallOption) (*ResponseB, error) {
	out := new(ResponseB)
	err := c.cc.Invoke(ctx, "/pb.TestService/MethodB", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TestServiceServer is the server API for TestService service.
type TestServiceServer interface {
	Live(context.Context, *empty.Empty) (*empty.Empty, error)
	MethodA(context.Context, *ParamA) (*ResponseA, error)
	MethodB(context.Context, *ParamB) (*ResponseB, error)
}

// UnimplementedTestServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTestServiceServer struct {
}

func (*UnimplementedTestServiceServer) Live(ctx context.Context, req *empty.Empty) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Live not implemented")
}
func (*UnimplementedTestServiceServer) MethodA(ctx context.Context, req *ParamA) (*ResponseA, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MethodA not implemented")
}
func (*UnimplementedTestServiceServer) MethodB(ctx context.Context, req *ParamB) (*ResponseB, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MethodB not implemented")
}

func RegisterTestServiceServer(s *grpc.Server, srv TestServiceServer) {
	s.RegisterService(&_TestService_serviceDesc, srv)
}

func _TestService_Live_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TestServiceServer).Live(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.TestService/Live",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TestServiceServer).Live(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _TestService_MethodA_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ParamA)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TestServiceServer).MethodA(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.TestService/MethodA",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TestServiceServer).MethodA(ctx, req.(*ParamA))
	}
	return interceptor(ctx, in, info, handler)
}

func _TestService_MethodB_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ParamB)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TestServiceServer).MethodB(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.TestService/MethodB",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TestServiceServer).MethodB(ctx, req.(*ParamB))
	}
	return interceptor(ctx, in, info, handler)
}

var _TestService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.TestService",
	HandlerType: (*TestServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Live",
			Handler:    _TestService_Live_Handler,
		},
		{
			MethodName: "MethodA",
			Handler:    _TestService_MethodA_Handler,
		},
		{
			MethodName: "MethodB",
			Handler:    _TestService_MethodB_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "test.proto",
}
